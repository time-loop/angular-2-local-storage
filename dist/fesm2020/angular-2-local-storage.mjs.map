{"version":3,"file":"angular-2-local-storage.mjs","sources":["../../src/local-storage.config.interface.ts","../../src/local-storage.module.ts","../../src/local-storage.service.ts","../../src/angular-2-local-storage.ts"],"sourcesContent":["import { INotifyOptions } from './notify-options.interface';\nimport { InjectionToken } from '@angular/core';\n\nexport const LOCAL_STORAGE_SERVICE_CONFIG = new InjectionToken<string>('LOCAL_STORAGE_SERVICE_CONFIG');\n\nexport interface ILocalStorageServiceConfig {\n    // Properties:\n    notifyOptions?: INotifyOptions;\n    prefix?: string;\n    storageType?: 'sessionStorage' | 'localStorage';\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\n\nimport { ILocalStorageServiceConfig, LOCAL_STORAGE_SERVICE_CONFIG } from './local-storage.config.interface';\n\n@NgModule()\nexport class LocalStorageModule {\n    static forRoot (userConfig: ILocalStorageServiceConfig = {}): ModuleWithProviders<LocalStorageModule> {\n        return {\n            ngModule: LocalStorageModule,\n            providers: [\n                { provide: LOCAL_STORAGE_SERVICE_CONFIG, useValue: userConfig }\n            ]\n        }\n    }\n}\n","import { Inject, Injectable, Optional } from '@angular/core';\nimport { Observable, Subscriber } from 'rxjs';\nimport { share } from 'rxjs/operators';\n\nimport { ILocalStorageEvent } from './local-storage-events.interface';\nimport { INotifyOptions } from './notify-options.interface';\nimport { ILocalStorageServiceConfig, LOCAL_STORAGE_SERVICE_CONFIG } from './local-storage.config.interface';\n\nconst DEPRECATED: string = 'This function is deprecated.';\nconst LOCAL_STORAGE_NOT_SUPPORTED: string = 'LOCAL_STORAGE_NOT_SUPPORTED';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class LocalStorageService {\n    public isSupported: boolean = false;\n\n    public errors$: Observable<string>;\n    public removeItems$: Observable<ILocalStorageEvent>;\n    public setItems$: Observable<ILocalStorageEvent>;\n    public warnings$: Observable<string>;\n\n    private notifyOptions: INotifyOptions = {\n        setItem: false,\n        removeItem: false\n    };\n    private prefix: string = 'ls';\n    private storageType: 'sessionStorage' | 'localStorage' = 'localStorage';\n    private webStorage: Storage;\n\n    private errors: Subscriber<string> = new Subscriber<string>();\n    private removeItems: Subscriber<ILocalStorageEvent> = new Subscriber<ILocalStorageEvent>() ;\n    private setItems: Subscriber<ILocalStorageEvent> = new Subscriber<ILocalStorageEvent>();\n    private warnings: Subscriber<string> = new Subscriber<string>();\n\n    constructor (\n        @Optional() @Inject(LOCAL_STORAGE_SERVICE_CONFIG) config: ILocalStorageServiceConfig = {}\n    ) {\n        let { notifyOptions, prefix, storageType } = config;\n\n        if (notifyOptions != null) {\n            let { setItem, removeItem } = notifyOptions;\n            this.setNotify(!!setItem, !!removeItem);\n        }\n        if (prefix != null) {\n            this.setPrefix(prefix);\n        }\n        if (storageType != null) {\n            this.setStorageType(storageType);\n        }\n\n        this.errors$ = new Observable<string>((observer: Subscriber<string>) => this.errors = observer).pipe(share());\n        this.removeItems$ = new Observable<ILocalStorageEvent>((observer: Subscriber<ILocalStorageEvent>) => this.removeItems = observer).pipe(share());\n        this.setItems$ = new Observable<ILocalStorageEvent>((observer: Subscriber<ILocalStorageEvent>) => this.setItems = observer).pipe(share());\n        this.warnings$ = new Observable<string>((observer: Subscriber<string>) => this.warnings = observer).pipe(share());\n\n        this.isSupported = this.checkSupport();\n    }\n\n    public add (key: string, value: any): boolean {\n        if (console && console.warn) {\n            console.warn(DEPRECATED);\n            console.warn('Use `LocalStorageService.set` instead.');\n        }\n\n        return this.set(key, value);\n    }\n\n    public clearAll (regularExpression?: string): boolean {\n        // Setting both regular expressions independently\n        // Empty strings result in catchall RegExp\n        let prefixRegex = !!this.prefix ? new RegExp('^' + this.prefix) : new RegExp('');\n        let testRegex = !!regularExpression ? new RegExp(regularExpression) : new RegExp('');\n\n        if (!this.isSupported) {\n            this.warnings.next(LOCAL_STORAGE_NOT_SUPPORTED);\n            return false;\n        }\n\n        let prefixLength = this.prefix.length;\n\n        for (let key in this.webStorage) {\n            // Only remove items that are for this app and match the regular expression\n            if (prefixRegex.test(key) && testRegex.test(key.substr(prefixLength))) {\n                try {\n                    this.remove(key.substr(prefixLength));\n                } catch (e) {\n                    this.errors.next(e.message);\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n\n    public deriveKey (key: string): string {\n        return `${this.prefix}${key}`;\n    }\n\n    public get <T> (key: string): T {\n        if (!this.isSupported) {\n            this.warnings.next(LOCAL_STORAGE_NOT_SUPPORTED);\n            return null;\n        }\n\n        let item = this.webStorage ? this.webStorage.getItem(this.deriveKey(key)) : null;\n        // FIXME: not a perfect solution, since a valid 'null' string can't be stored\n        if (!item || item === 'null') {\n            return null;\n        }\n\n        try {\n            return JSON.parse(item);\n        } catch (e) {\n            return null;\n        }\n    }\n\n    public getStorageType (): string {\n        return this.storageType;\n    }\n\n    public keys (): Array<string> {\n        if (!this.isSupported) {\n            this.warnings.next(LOCAL_STORAGE_NOT_SUPPORTED);\n            return [];\n        }\n\n        let prefixLength = this.prefix.length;\n        let keys: Array<string> = [];\n        for (let key in this.webStorage) {\n            // Only return keys that are for this app\n            if (key.substr(0, prefixLength) === this.prefix) {\n                try {\n                    keys.push(key.substr(prefixLength));\n                } catch (e) {\n                    this.errors.next(e.message);\n                    return [];\n                }\n            }\n        }\n        return keys;\n    }\n\n    public length (): number {\n        let count = 0;\n        let storage = this.webStorage;\n        for(let i = 0; i < storage.length; i++) {\n            if (storage.key(i).indexOf(this.prefix) === 0) {\n                count += 1;\n            }\n        }\n        return count;\n    }\n\n    public remove (...keys: Array<string>): boolean {\n        let result = true;\n        keys.forEach((key: string) => {\n            if (!this.isSupported) {\n                this.warnings.next(LOCAL_STORAGE_NOT_SUPPORTED);\n                result = false;\n            }\n\n            try {\n                this.webStorage.removeItem(this.deriveKey(key));\n                if (this.notifyOptions.removeItem) {\n                    this.removeItems.next({\n                        key: key,\n                        storageType: this.storageType\n                    });\n                }\n            } catch (e) {\n                this.errors.next(e.message);\n                result = false;\n            }\n        });\n        return result;\n    }\n\n    public set (key: string, value: any): boolean {\n        // Let's convert `undefined` values to `null` to get the value consistent\n        if (value === undefined) {\n            value = null;\n        } else {\n            value = JSON.stringify(value);\n        }\n\n        if (!this.isSupported) {\n            this.warnings.next(LOCAL_STORAGE_NOT_SUPPORTED);\n            return false;\n        }\n\n        try {\n            if (this.webStorage) {\n                this.webStorage.setItem(this.deriveKey(key), value);\n            }\n            if (this.notifyOptions.setItem) {\n                this.setItems.next({\n                    key: key,\n                    newvalue: value,\n                    storageType: this.storageType\n                });\n            }\n        } catch (e) {\n            this.errors.next(e.message);\n            return false;\n        }\n        return true;\n    }\n\n    private checkSupport (): boolean {\n        try {\n            let supported = this.storageType in window\n                          && window[this.storageType] !== null;\n\n            if (supported) {\n                this.webStorage = window[this.storageType];\n\n                // When Safari (OS X or iOS) is in private browsing mode, it\n                // appears as though localStorage is available, but trying to\n                // call .setItem throws an exception.\n                //\n                // \"QUOTA_EXCEEDED_ERR: DOM Exception 22: An attempt was made\n                // to add something to storage that exceeded the quota.\"\n                let key = this.deriveKey(`__${Math.round(Math.random() * 1e7)}`);\n                this.webStorage.setItem(key, '');\n                this.webStorage.removeItem(key);\n            }\n\n            return supported;\n        } catch (e) {\n            this.errors.next(e.message);\n            return false;\n        }\n    }\n\n    private setPrefix (prefix: string): void {\n        this.prefix = prefix;\n\n        // If there is a prefix set in the config let's use that with an appended\n        // period for readability:\n        const PERIOD: string = '.';\n        if (this.prefix && !this.prefix.endsWith(PERIOD)) {\n            this.prefix = !!this.prefix ? `${this.prefix}${PERIOD}` : '';\n        }\n    }\n\n    private setStorageType (storageType: 'sessionStorage' | 'localStorage'): void {\n        this.storageType = storageType;\n    }\n\n    private setNotify (setItem: boolean, removeItem: boolean): void {\n        if (setItem != null) {\n            this.notifyOptions.setItem = setItem;\n        }\n        if (removeItem != null) {\n            this.notifyOptions.removeItem = removeItem;\n        }\n    }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}